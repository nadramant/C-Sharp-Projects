using System;
using System.Collections.Generic;
using System.Text;

namespace B20_Ex01_4
{
    class Program
    {
        protected const int k_StringInputLength = 8;
        public static void Main()
        {
            stringAnalysis();
        }
        //-----------------------------------------------------------------------------------------//
        private static void stringAnalysis()
        {
            Console.WriteLine("Hello, please enter a string with 8 characters.{0}The string will conist only numbers or only English letters.", Environment.NewLine);
            string userInput = checkInputFromUser();
            bool isPalindrom = true;
            int numberOfUpperCase;

            isPalindrom = checkPalindrom(userInput, isPalindrom);
            Console.WriteLine("The string is a plindrom");

            if(isNum(userInput))
            {
                if(isTheNumMultipliedByFive(userInput))
                {
                    Console.WriteLine("The number is divided by five without the remainder");
                }
                else
                {
                    Console.WriteLine("The number is not divided by five");
                }
            }
            else
            {
                numberOfUpperCase = countOfUpperCaseInTheString(userInput);
                Console.WriteLine("There are {0} uppercase letters in the string", numberOfUpperCase);
            }
        }

        //-----------------------------------------------------------------------------------------//
        private static string checkInputFromUser()
        {
            string retString;
            string i_Input = Console.ReadLine();

            if (i_Input.Length != k_StringInputLength || (!isNum(i_Input) && !isOnlyLetters(i_Input)))
            {
                Console.WriteLine("Invalid Input.{0}please enter a string with 8 characters.{1}The string will conist only numbers or only English letters.", Environment.NewLine, Environment.NewLine);
                retString = checkInputFromUser();
            }

            retString = i_Input;
            return retString;
        }

        //-----------------------------------------------------------------------------------------//
        private static bool isNum(string i_Input)
        {
            bool isString = false;
            int resFromTryParse;

            if (int.TryParse(i_Input, out resFromTryParse))
            {
                isString = true;
            }

            return isString;
        }

        //-----------------------------------------------------------------------------------------//
        private static bool isOnlyLetters(string i_Input)
        {
            bool isConsistsOnlyLetters = true;

            foreach (var value in i_Input)
            {
                if (!Char.IsLetter(value))
                {
                    isConsistsOnlyLetters = false;
                }
            }

            return isConsistsOnlyLetters;
        }

        //-----------------------------------------------------------------------------------------//
        private static bool checkPalindrom(string i_userInput, bool io_isPalindrom)
        {
            if (i_userInput.Length != 0)
            {
                if (i_userInput[0] != i_userInput[i_userInput.Length - 1])
                {
                    io_isPalindrom = false;
                }

                io_isPalindrom = checkPalindrom((i_userInput.Remove(i_userInput.Length - 1, 1)).Remove(0, 1), io_isPalindrom); 
            }

            return io_isPalindrom;
        }
        
        //-----------------------------------------------------------------------------------------//
        private static bool isTheNumMultipliedByFive(string i_userInput)
        {
            bool isMultipleOfFive = false;
            int resFromTryParse = int.Parse(i_userInput);

            if (resFromTryParse % 5 == 0)
            {
                isMultipleOfFive = true;
            }

            return isMultipleOfFive;
        }

        //-----------------------------------------------------------------------------------------//
        private static int countOfUpperCaseInTheString(string i_userInput)
        {
            int countUpperCase = 0;

            for (int i = 0; i < i_userInput.Length; i++)
            {
                if(char.IsUpper(i_userInput[i]))
                {
                    countUpperCase++;
                }
            }

            return countUpperCase;
        }
    }
}
